apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-api
  labels:
    {{- include "rag-demo.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rag-api
  template:
    metadata:
      labels:
        app: rag-api
    spec:
      initContainers:
        - name: wait-for-cassandra
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "⏳ waiting for Cassandra ..."
              max_attempts=30
              attempt=0
              while [ $attempt -lt $max_attempts ]; do
                if nc -z -w 5 {{ printf "%s-cassandra" .Release.Name }} 9042; then
                  echo "Cassandra port is reachable. Checking service readiness..."
                  sleep 10
                  echo "Cassandra should be ready now"
                  exit 0
                fi
                attempt=$((attempt+1))
                echo "Attempt $attempt of $max_attempts. Waiting for Cassandra to be ready..."
                sleep 10
              done
              echo "Cassandra failed to become ready within the timeout period"
              exit 1
        - name: wait-for-qwen
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "⏳ waiting for Qwen service ..."
              max_attempts=30
              attempt=0
              while [ $attempt -lt $max_attempts ]; do
                if nc -z -w 5 qwen 8000; then
                  echo "Qwen port is reachable. Checking service readiness..."
                  sleep 5
                  echo "Qwen should be ready now"
                  exit 0
                fi
                attempt=$((attempt+1))
                echo "Attempt $attempt of $max_attempts. Waiting for Qwen to be ready..."
                sleep 10
              done
              echo "Qwen failed to become ready within the timeout period"
              exit 1
      containers:
        - name: rag-api
          image: rag-api:latest

          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: QWEN_ENDPOINT
              value: "http://qwen:8000"
            - name: CASSANDRA_HOST
              value: "{{ .Release.Name }}-cassandra"
            - name: CASSANDRA_PORT
              value: "9042"
            - name: CASSANDRA_USERNAME
              value: "{{ .Values.cassandra.auth.username }}"
            - name: CASSANDRA_PASSWORD
              value: "{{ .Values.cassandra.auth.password }}"
            - name: CASSANDRA_KEYSPACE
              value: "vector_store"
          ports:
            - containerPort: 8000
              name: http
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3